{"version":3,"sources":["./src/app/components/auth/register/register.component.ts","./src/app/components/auth/register/register.component.html","./src/app/components/add-film/add-film.component.ts","./src/app/components/add-film/add-film.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/edit-review/edit-review.component.ts","./src/app/components/edit-review/edit-review.component.html","./src/app/components/my-reviews/my-reviews.component.ts","./src/app/components/my-reviews/my-reviews.component.html","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/login/login.component.html","./src/app/components/films/films.component.ts","./src/app/components/films/films.component.html","./src/app/services/review/review.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/auth/verify/verify.component.ts","./src/app/components/auth/verify/verify.component.html","./src/app/components/create-review/create-review.component.ts","./src/app/components/create-review/create-review.component.html","./src/app/app.module.ts","./src/app/components/review-details/review-details.component.ts","./src/app/components/review-details/review-details.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/film/film.service.ts","./src/app/services/firebase/auth.service.ts","./src/app/components/reviews/reviews.component.ts","./src/app/components/reviews/reviews.component.html","./src/app/components/auth/forgot/forgot.component.ts","./src/app/components/auth/forgot/forgot.component.html","./src/app/app-routing.module.ts","./src/app/components/reviews-by-film/reviews-by-film.component.ts","./src/app/components/reviews-by-film/reviews-by-film.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Form, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/services/firebase/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n\r\n  onSubmit(): void {\r\n    this.authService.SignUp(this.registerForm.get('email').value, this.registerForm.get('password').value);\r\n  }\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private fb: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n\r\n  get email() {\r\n    return this.registerForm.get(\"email\");\r\n  }\r\n\r\n  get password() {\r\n    return this.registerForm.get(\"password\");\r\n  }\r\n\r\n}\r\n","<body class=\"text-center\">\r\n  <form class=\"form-register\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h1 class=\"h3 mb-3 font-weight-normal\">Register for an Account</h1>\r\n\r\n    <div class=\"form-group\">\r\n      <div class=\"invalid-feedback d-block\" *ngIf=\"email.invalid && email.touched\">\r\n        The email is invalid.\r\n      </div>\r\n      <input formControlName=\"email\" type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\">\r\n\r\n      <input formControlName=\"password\" type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\">\r\n      <div class=\"invalid-feedback d-block\" *ngIf=\"password.invalid && password.touched\">\r\n        The password is invalid.\r\n      </div>\r\n    </div>\r\n\r\n    <button [disabled]=\"registerForm.invalid\" class=\"btn btn-lg btn-info btn-block\" type=\"submit\">Register</button>\r\n\r\n    <hr class=\"dashed\">\r\n\r\n    <div style=\"float: right; cursor: pointer;\">\r\n      <span class=\"text-secondary\" routerLink=\"/login\">Return to Login</span>\r\n    </div>\r\n\r\n  </form>\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { FilmService } from 'src/app/services/film/film.service';\r\n\r\n@Component({\r\n  selector: 'app-add-film',\r\n  templateUrl: './add-film.component.html',\r\n  styleUrls: ['./add-film.component.scss']\r\n})\r\nexport class AddFilmComponent implements OnInit {\r\n  addFilmForm: FormGroup;\r\n\r\n  constructor(\r\n    public bsModalRef: BsModalRef,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private filmService: FilmService,\r\n  ) { }\r\n\r\n  ngOnInit(\r\n  ) {\r\n    this.addFilmForm = this.fb.group({\r\n      filmTitle: ['', [Validators.required]],\r\n      genre: ['', [Validators.required]],\r\n      studio: ['', [Validators.required]],\r\n      director: ['', [Validators.required]],\r\n      topBilling: ['', [Validators.required]],\r\n      synopsis: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  hideModalAndReloadComponent() {\r\n    this.bsModalRef.hide();\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    this.router.onSameUrlNavigation = 'reload';\r\n    this.router.navigateByUrl('/create-review');\r\n  }\r\n\r\n  onSubmit() {\r\n    this.filmService.createFilm(\r\n      this.filmTitle.value,\r\n      this.genre.value,\r\n      this.studio.value,\r\n      this.director.value,\r\n      this.topBilling.value,\r\n      this.synopsis.value,\r\n    ).subscribe(() => {\r\n      this.hideModalAndReloadComponent();\r\n    });\r\n  }\r\n\r\n  get filmTitle() {\r\n    return this.addFilmForm.get(\"filmTitle\");\r\n  }\r\n\r\n  get genre() {\r\n    return this.addFilmForm.get(\"genre\");\r\n  }\r\n\r\n  get studio() {\r\n    return this.addFilmForm.get(\"studio\");\r\n  }\r\n\r\n  get director() {\r\n    return this.addFilmForm.get(\"director\");\r\n  }\r\n\r\n  get topBilling() {\r\n    return this.addFilmForm.get(\"topBilling\");\r\n  }\r\n\r\n  get synopsis() {\r\n    return this.addFilmForm.get(\"synopsis\");\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"addFilmForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"container\">\r\n        <div class=\"modal-header\">\r\n            <h4 class=\"modal-title pull-left\">Add a New Film!</h4>\r\n            <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"filmTitle\">Title</label>\r\n            <input formControlName=\"filmTitle\" type=\"text\" class=\"form-control\" id=\"filmTitle\" placeholder=\"Avengers\">\r\n            <div class=\"invalid-feedback d-block\" *ngIf=\"filmTitle.invalid && filmTitle.touched\">\r\n                Please enter a title!\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n            <label for=\"genre\">Genre</label>\r\n            <input formControlName=\"genre\" type=\"text\" class=\"form-control\" id=\"genre\" placeholder=\"Action\">\r\n            <div class=\"invalid-feedback d-block\" *ngIf=\"genre.invalid && genre.touched\">\r\n                Please enter a genre!\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"studio\">Studio</label>\r\n            <input formControlName=\"studio\" type=\"text\" class=\"form-control\" id=\"studio\" placeholder=\"Disney\">\r\n            <div class=\"invalid-feedback d-block\" *ngIf=\"studio.invalid && studio.touched\">\r\n                Please enter a Studio!\r\n            </div> \r\n        </div>     \r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"director\">Director</label>\r\n            <input formControlName=\"director\" type=\"text\" class=\"form-control\" id=\"director\" placeholder=\"Russo Brothers\">\r\n            <div class=\"invalid-feedback d-block\" *ngIf=\"director.invalid && director.touched\">\r\n                Please enter a Director!\r\n            </div>  \r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"topBilling\">Top Billing Actor</label>\r\n            <input formControlName=\"topBilling\" type=\"text\" class=\"form-control\" id=\"topBilling\" placeholder=\"Robert Downey Jr.\">\r\n            <div class=\"invalid-feedback d-block\" *ngIf=\"topBilling.invalid && topBilling.touched\">\r\n                Please enter an Actor's Name!\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n            <label for=\"synopsis\">Film's Synopsis</label>\r\n            <textarea formControlName=\"synopsis\" class=\"form-control\" id=\"synopsis\" rows=\"3\"></textarea>\r\n            <div class=\"invalid-feedback d-block\" *ngIf=\"synopsis.invalid && synopsis.touched\">\r\n                Please enter a synopsis!\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n            <button [disabled]=\"addFilmForm.invalid\" class=\"btn btn-info btn-block\" type=\"submit\">Save</button>\r\n        </div>\r\n    </div>\r\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyBcpkDky3jRDYImmIlR8K5a-LTJ5DXsQwI\",\n    authDomain: \"comp-586-auth.firebaseapp.com\",\n    databaseURL: \"https://comp-586-auth.firebaseio.com\",\n    projectId: \"comp-586-auth\",\n    storageBucket: \"comp-586-auth.appspot.com\",\n    messagingSenderId: \"157487377178\",\n    appId: \"1:157487377178:web:2bbc0fb4ccae5198895aa3\",\n    measurementId: \"G-4799GQGZ6G\"\n  },\n  baseUrl: `https://tonynguyen98.com/api`\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { FilmReview } from 'src/app/models/film-review';\r\nimport { AuthService } from 'src/app/services/firebase/auth.service';\r\nimport { ReviewService } from 'src/app/services/review/review.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  filmReviews: FilmReview[];\r\n\r\n  rate = 10;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private reviewService: ReviewService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllReviews();\r\n  }\r\n\r\n  getAllReviews() {\r\n    this.reviewService.getAllReviews().subscribe(\r\n      data => {\r\n        this.filmReviews = data;\r\n        this.filmReviews.reverse();\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n","<main role=\"main\">\r\n\r\n\r\n  <div class=\"jumbotron\">\r\n    <div class=\"container text-center\" *ngIf=\"!filmReviews\">\r\n      <div class=\"spinner-border\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"container\" *ngIf=\"filmReviews\">\r\n      <h1 class=\"display-3\">{{filmReviews[0].title}}</h1>\r\n      <h3>\r\n        <rating [(ngModel)]=\"filmReviews[0].rating\" max=10 readonly=\"true\"></rating> ({{filmReviews[0].rating}})\r\n      </h3>\r\n      <h6> {{ filmReviews[0].review }} </h6>\r\n      <p>Reviewed by: {{ filmReviews[0].userReviewedId }} | {{filmReviews[0].dateReviewed}}</p>\r\n      <p><a class=\"btn btn-secondary\" [routerLink]=\"[ '/review', filmReviews[0].id]\" role=\"button\">Review details\r\n          &raquo;</a></p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container text-center\" *ngIf=\"!filmReviews\">\r\n    <div class=\"spinner-border\" role=\"status\">\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container\" *ngIf=\"filmReviews\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <h2>{{filmReviews[1].title}}</h2>\r\n        <h5>\r\n          <rating [(ngModel)]=\"filmReviews[1].rating\" max=10 readonly=\"true\"></rating> ({{filmReviews[1].rating}})\r\n        </h5>\r\n        <p> {{ filmReviews[1].review }} </p>\r\n        <p>Reviewed by: {{ filmReviews[1].userReviewedId }} | {{filmReviews[1].dateReviewed}}</p>\r\n        <p><a class=\"btn btn-secondary\" [routerLink]=\"[ '/review', filmReviews[1].id]\" role=\"button\">Review details\r\n            &raquo;</a></p>\r\n      </div>\r\n\r\n      <div class=\"col-md-4\">\r\n        <h2>{{filmReviews[2].title}}</h2>\r\n        <h5>\r\n          <rating [(ngModel)]=\"filmReviews[2].rating\" max=10 readonly=\"true\"></rating> ({{filmReviews[2].rating}})\r\n        </h5>\r\n        <p> {{ filmReviews[2].review }} </p>\r\n        <p>Reviewed by: {{ filmReviews[2].userReviewedId }} | {{filmReviews[2].dateReviewed}}</p>\r\n        <p><a class=\"btn btn-secondary\" [routerLink]=\"[ '/review', filmReviews[2].id]\" role=\"button\">Review details\r\n            &raquo;</a></p>\r\n      </div>\r\n\r\n      <div class=\"col-md-4\">\r\n        <h2>{{filmReviews[3].title}}</h2>\r\n        <h5>\r\n          <rating [(ngModel)]=\"filmReviews[3].rating\" max=10 readonly=\"true\"></rating> ({{filmReviews[3].rating}})\r\n        </h5>\r\n        <p> {{ filmReviews[3].review }} </p>\r\n        <p>Reviewed by: {{ filmReviews[3].userReviewedId }} | {{filmReviews[3].dateReviewed}}</p>\r\n        <p><a class=\"btn btn-secondary\" [routerLink]=\"[ '/review', filmReviews[3].id]\" role=\"button\">Review details\r\n            &raquo;</a></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</main>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { FilmReview } from 'src/app/models/film-review';\nimport { ReviewService } from 'src/app/services/review/review.service';\n\n@Component({\n  selector: 'app-edit-review',\n  templateUrl: './edit-review.component.html',\n  styleUrls: ['./edit-review.component.scss']\n})\nexport class EditReviewComponent implements OnInit {\n  editReviewForm: FormGroup;\n\n  filmReview: FilmReview;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private router: Router,\n    private fb: FormBuilder,\n    private reviewService: ReviewService,\n  ) { }\n\n  ngOnInit(): void {\n    this.editReviewForm = this.fb.group({\n      rating: [this.filmReview.rating, [Validators.required]],\n      review: [this.filmReview.review, [Validators.required]],\n    });\n  }\n\n  hideModalAndReloadComponent() {\n    this.bsModalRef.hide();\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.router.onSameUrlNavigation = 'reload';\n    this.router.navigateByUrl('/my-reviews');\n  }\n\n  onSubmit() {\n    this.reviewService.editReview(\n      this.filmReview.id,\n      this.rating.value,\n      this.review.value,\n    ).subscribe(() => {\n      this.hideModalAndReloadComponent();\n    })\n  }\n\n  get rating() {\n    return this.editReviewForm.get(\"rating\");\n  }\n\n  get review() {\n    return this.editReviewForm.get(\"review\");\n  }\n\n}\n","<form [formGroup]=\"editReviewForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"container\">\r\n        <div class=\"modal-header\">\r\n            <h4 class=\"modal-title pull-left\">Edit your Review!</h4>\r\n            <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"rating\">\r\n                <h5>Select a Rating:</h5>\r\n            </label>\r\n            <h1>\r\n                <rating [max]=10 formControlName=\"rating\"></rating>\r\n            </h1>\r\n            <p *ngIf=\"rating.value !== ''\">({{rating.value}})</p>\r\n            <div class=\"invalid-feedback d-block\" *ngIf=\"rating.invalid && rating.touched\">\r\n                Please choose a rating!\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"review\">\r\n                <h5>Write a Review:</h5>\r\n            </label>\r\n            <textarea formControlName=\"review\" class=\"form-control\" id=\"review\" rows=\"3\"></textarea>\r\n            <div class=\"invalid-feedback d-block\" *ngIf=\"review.invalid && review.touched\">\r\n                Please write a review!\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n            <button [disabled]=\"editReviewForm.invalid\" class=\"btn btn-info btn-block\" type=\"submit\">Update</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { FilmReview } from 'src/app/models/film-review';\nimport { AuthService } from 'src/app/services/firebase/auth.service';\nimport { ReviewService } from 'src/app/services/review/review.service';\nimport { EditReviewComponent } from '../edit-review/edit-review.component';\n\n@Component({\n  selector: 'app-my-reviews',\n  templateUrl: './my-reviews.component.html',\n  styleUrls: ['./my-reviews.component.scss']\n})\nexport class MyReviewsComponent implements OnInit {\n  bsModalRef: BsModalRef;\n\n  filmReviews: FilmReview[];\n\n  constructor(\n    private reviewService: ReviewService,\n    public authService: AuthService,\n    private router: Router,\n    private modalService: BsModalService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getAllReviews();\n  }\n\n  getAllReviews() {\n    this.reviewService.getAllReviews().subscribe(\n      data => {\n        this.filmReviews = data;\n      }\n    );\n  }\n\n  deleteReview(id: string) {\n    this.reviewService.deleteReview(id).subscribe(() => {\n      this.reloadComponent();\n    });\n  }\n\n  openEditReviewModal(filmReview: FilmReview) {\n    const initialState = {\n      filmReview: filmReview,\n    };\n    this.bsModalRef = this.modalService.show(EditReviewComponent, { initialState });\n    this.bsModalRef.content.closeBtnName = 'Close';\n  }\n\n  reloadComponent() {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.router.onSameUrlNavigation = 'reload';\n    this.router.navigateByUrl('/my-reviews');\n  }\n\n}\n","<main role=\"main\">\n    <div class=\"container text-center\" *ngIf=\"!filmReviews || !authService.userData\">\n        <div class=\"spinner-border\" role=\"status\">\n            <span class=\"sr-only\">Loading...</span>\n        </div>\n    </div>\n\n    <div class=\"container\" *ngIf=\"filmReviews && authService.userData\">\n        <div class=\"py-5 text-center\">\n            <h2><u>My Reviews</u></h2>\n        </div>\n\n        <div class=\"container-xl\" *ngFor=\"let filmReview of filmReviews\">\n            <div *ngIf=\"filmReview.userReviewedId === authService.userData.uid\">\n                <h2>{{ filmReview.title }}</h2>\n                <h5>\n                    <rating [(ngModel)]=\"filmReview.rating\" max=10 readonly=\"true\"></rating>\n                    ({{filmReview.rating}})\n                </h5>\n                <h6> {{ filmReview.review }} </h6>\n                <p>Reviewed on: {{filmReview.dateReviewed}}</p>\n                <div class=\"row d-flex justify-content-between\">\n                    <button class=\"btn btn-warning\" (click)=\"openEditReviewModal(filmReview)\" type=\"button\">\n                        Edit Review\n                    </button>\n                    <button class=\"btn btn-danger\" (click)=\"deleteReview(filmReview.id)\" type=\"button\">\n                        Delete Review\n                    </button>\n                </div>\n                <hr>\n            </div>\n        </div>\n\n    </div>\n</main>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/services/firebase/auth.service';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  faGoogle = faGoogle;\r\n\r\n  loginForm: FormGroup;\r\n\r\n  onSubmit(): void {\r\n    this.authService.SignIn(this.loginForm.get('email').value, this.loginForm.get('password').value);\r\n  }\r\n\r\n  onGoogleClick(): void {\r\n    this.authService.GoogleAuth();\r\n  }\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n\r\n  get email() {\r\n    return this.loginForm.get(\"email\");\r\n  }\r\n\r\n  get password() {\r\n    return this.loginForm.get(\"password\");\r\n  }\r\n\r\n\r\n}\r\n","<body class=\"text-center\">\r\n  <form class=\"form-signin\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h1 class=\"h3 mb-3 font-weight-normal\">Sign In</h1>\r\n\r\n    <div class=\"form-group\">\r\n      <div class=\"invalid-feedback d-block\" *ngIf=\"email.invalid && email.touched\">\r\n        The email is invalid.\r\n      </div>\r\n      <input formControlName=\"email\" type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\">\r\n\r\n      <input formControlName=\"password\" type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\">\r\n      <div class=\"invalid-feedback d-block\" *ngIf=\"password.invalid && password.touched\">\r\n        The password is invalid.\r\n      </div>\r\n    </div>\r\n\r\n    <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-info btn-block\" type=\"submit\">Sign In</button>\r\n\r\n    <hr class=\"dashed\">\r\n\r\n    <div>\r\n      <div style=\"float: left; cursor: pointer;\">\r\n        <span class=\"text-secondary\" routerLink=\"/forgot-password\">Forgot Password?</span>\r\n      </div>\r\n      <div style=\"float: right; cursor: pointer;\">\r\n        <span class=\"text-secondary\" routerLink=\"/register\">Sign Up</span>\r\n      </div>\r\n      <br>\r\n    </div>\r\n\r\n\r\n    <hr class=\"double\">\r\n\r\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"button\" (click)=\"this.authService.GoogleAuth();\">\r\n      <fa-icon [icon]=\"faGoogle\"></fa-icon>\r\n      Sign in with Google\r\n    </button>\r\n  </form>\r\n</body>","import { Component, OnInit } from '@angular/core';\nimport { Film } from 'src/app/models/film';\nimport { FilmService } from 'src/app/services/film/film.service';\n\n@Component({\n  selector: 'app-films',\n  templateUrl: './films.component.html',\n  styleUrls: ['./films.component.scss']\n})\nexport class FilmsComponent implements OnInit {\n\n  films: Film[];\n\n  constructor(\n    private filmService: FilmService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getAllFilms();\n  }\n\n  getAllFilms() {\n    this.filmService.getAllFilms().subscribe(\n      data => {\n        this.films = data;\n      }\n    )\n  }\n\n}\n","<main>\n\t<div class=\"container\">\n\t\t<div class=\"py-5 text-center\">\n\t\t\t<h2><u>All Films that have been Reviewed</u></h2>\n\t\t</div>\n\n\t\t<ul class=\"list-group\" *ngFor=\"let film of films\">\n\t\t\t<a routerLink=\"/film/{{film.id}}/reviews\">\n\t\t\t\t<li class=\"list-group-item d-flex justify-content-between align-items-center\">\n\t\t\t\t\t<h3>{{film.title}}</h3>\n\t\t\t\t\t<span class=\"badge badge-primary badge-pill\">{{film.reviews.length}}</span>\n\t\t\t\t</li>\n\t\t\t</a>\n\t\t</ul>\n\t</div>\n\n</main>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Observable } from 'rxjs';\r\nimport { FilmReview } from 'src/app/models/film-review';\r\nimport { Review } from 'src/app/models/review';\r\nimport { Film } from 'src/app/models/film';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReviewService {\r\n  private baseUrl = environment.baseUrl;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private auth: AngularFireAuth,\r\n  ) { }\r\n\r\n  getAllReviews(): Observable<FilmReview[]> {\r\n    return this.http.get<FilmReview[]>(this.baseUrl + '/reviews');\r\n  }\r\n\r\n  getReviewById(id: string): Observable<Review> {\r\n    return this.http.get<Review>(this.baseUrl + `/review/${id}`);\r\n  }\r\n\r\n  createReview(rating: number, review: string, userReviewedId: string, film: Film): Observable<Review> {\r\n    let body: Review = {\r\n      id: null,\r\n      rating: rating,\r\n      review: review,\r\n      userReviewedId: userReviewedId,\r\n      film: film,\r\n      dateReviewed: null,\r\n    };\r\n\r\n    return new Observable<Review>(observer => {\r\n      this.auth.user.subscribe(user => {\r\n        user && user.getIdToken().then(token => {\r\n          this.http.post<Review>(\r\n            this.baseUrl + `/review/create`,\r\n            body,\r\n            httpOptionsWithAuthToken(token),\r\n          ).subscribe(() => observer.next());\r\n        })\r\n      })\r\n    });\r\n  }\r\n\r\n  editReview(id: number, rating: number, review: string): Observable<Review> {\r\n    return new Observable<Review>(observer => {\r\n      this.auth.user.subscribe(user => {\r\n        user && user.getIdToken().then(token => {\r\n          this.http.put<Review>(\r\n            this.baseUrl + `/review/${id}`,\r\n            { rating, review },\r\n            httpOptionsWithAuthToken(token),\r\n          ).subscribe(() => observer.next());\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  deleteReview(id: string): Observable<any> {\r\n    return new Observable<any>(observer => {\r\n      this.auth.user.subscribe(user => {\r\n        user && user.getIdToken().then(token => {\r\n          this.http.delete(\r\n            this.baseUrl + `/review/${id}`,\r\n            httpOptionsWithAuthToken(token)\r\n          ).subscribe(() => observer.next());\r\n        })\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nconst httpsOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n  }),\r\n};\r\n\r\nconst httpOptionsWithAuthToken = token => ({\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'AuthToken': token,\r\n  }),\r\n});\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Bon Films!';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<!-- display routes under navbar -->\r\n<main>\r\n  <app-navbar></app-navbar>\r\n  <router-outlet></router-outlet>\r\n</main>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/firebase/auth.service';\n\n@Component({\n  selector: 'app-verify',\n  templateUrl: './verify.component.html',\n  styleUrls: ['./verify.component.scss']\n})\nexport class VerifyComponent implements OnInit {\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body class=\"text-center\">\r\n  <div class=\"form-verify\">\r\n    <h1 class=\"h3 mb-3 font-weight-normal\">Register for an Account</h1>\r\n\r\n    <div *ngIf=\"authService.userData as user\">\r\n      <p>We have sent a confirmation email to <strong>{{user.email}}</strong>.</p>\r\n      <p>Please check your email and click on the link to verify your email address.</p>\r\n    </div>\r\n\r\n    <button class=\"btn btn-lg btn-info btn-block\" routerLink=\"/login\">\r\n      Return to Login\r\n    </button>\r\n  </div>\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\nimport { Film } from 'src/app/models/film';\r\nimport { FilmService } from 'src/app/services/film/film.service';\r\nimport { AuthService } from 'src/app/services/firebase/auth.service';\r\nimport { ReviewService } from 'src/app/services/review/review.service';\r\nimport { AddFilmComponent } from '../add-film/add-film.component';\r\n\r\n@Component({\r\n  selector: 'app-create-review',\r\n  templateUrl: './create-review.component.html',\r\n  styleUrls: ['./create-review.component.scss']\r\n})\r\nexport class CreateReviewComponent implements OnInit {\r\n  bsModalRef: BsModalRef;\r\n\r\n  createReviewForm: FormGroup;\r\n\r\n  films: Film[];\r\n\r\n  userId: string;\r\n\r\n  constructor(\r\n    private filmService: FilmService,\r\n    public reviewService: ReviewService,\r\n    private modalService: BsModalService,\r\n    private fb: FormBuilder,\r\n    public authService: AuthService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n\r\n  ngOnInit(\r\n  ) {\r\n    this.getAllFilms();\r\n\r\n    this.createReviewForm = this.fb.group({\r\n      film: ['', [Validators.required]],\r\n      rating: ['', [Validators.required]],\r\n      review: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  openAddFilmModal() {\r\n    const initialState = {\r\n    };\r\n    this.bsModalRef = this.modalService.show(AddFilmComponent, { initialState });\r\n    this.bsModalRef.content.closeBtnName = 'Close';\r\n  }\r\n\r\n  getAllFilms() {\r\n    this.filmService.getAllFilms().subscribe(\r\n      data => {\r\n        this.films = data;\r\n      }\r\n    )\r\n  }\r\n\r\n  onSubmit() {\r\n    // this.userId = this.authService.userData.displayName\r\n    //   ? this.authService.userData.displayName\r\n    //   : \"Anonymous User - \" + this.authService.userData.uid;\r\n    this.userId = this.authService.userData.uid;\r\n\r\n    this.reviewService.createReview(\r\n      this.rating.value,\r\n      this.review.value,\r\n      this.userId,\r\n      this.film.value\r\n    ).subscribe(() => {\r\n      this.router.navigateByUrl(\"/home\")\r\n    });\r\n  }\r\n\r\n  get film() {\r\n    return this.createReviewForm.get(\"film\");\r\n  }\r\n\r\n  get rating() {\r\n    return this.createReviewForm.get(\"rating\");\r\n  }\r\n\r\n  get review() {\r\n    return this.createReviewForm.get(\"review\");\r\n  }\r\n\r\n}\r\n","<main>\r\n    <div class=\"container\">\r\n        <div class=\"py-5 text-center\">\r\n            <h2><u>Write a Review!</u></h2>\r\n        </div>\r\n\r\n        <form [formGroup]=\"createReviewForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n            <div class=\"form-group\">\r\n                <div class=\"row mb-2\">\r\n                    <div class=\"col-md-8 themed-grid-col\">\r\n                        <label for=\"filmSelect\">\r\n                            <h5>Select a Film:</h5>\r\n                        </label>\r\n                    </div>\r\n                    <div class=\"col-md-4 themed-grid-col text-right\">\r\n                        <button type=\"button\" class=\"btn btn-link\" (click)=\"openAddFilmModal()\">\r\n                            Film not listed? Add it!\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <select class=\"form-control\" formControlName=\"film\">\r\n                    <option *ngFor=\"let film of films\" [ngValue]=\"film\">{{film.title}}</option>\r\n                </select>\r\n                <div class=\"invalid-feedback d-block\" *ngIf=\"film.invalid && film.touched\">\r\n                    Please select a rating!\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"rating\">\r\n                    <h5>Select a Rating:</h5>\r\n                </label>\r\n                <h1>\r\n                    <rating [max]=10 formControlName=\"rating\"></rating>\r\n                </h1>\r\n                <p *ngIf=\"rating.value !== ''\">({{rating.value}})</p>\r\n                <div class=\"invalid-feedback d-block\" *ngIf=\"rating.invalid && rating.touched\">\r\n                    Please choose a rating!\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"review\">\r\n                    <h5>Write a Review:</h5>\r\n                </label>\r\n                <textarea formControlName=\"review\" class=\"form-control\" id=\"review\" rows=\"3\"></textarea>\r\n                <div class=\"invalid-feedback d-block\" *ngIf=\"review.invalid && review.touched\">\r\n                    Please write a review!\r\n                </div>\r\n            </div>\r\n\r\n            <button [disabled]=\"createReviewForm.invalid\" class=\"btn btn-lg btn-info btn-block\"\r\n                type=\"submit\">Submit</button>\r\n\r\n        </form>\r\n\r\n    </div>\r\n</main>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AngularFireModule } from \"@angular/fire\";\r\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment';\r\nimport { LoginComponent } from './components/auth/login/login.component';\r\nimport { RegisterComponent } from './components/auth/register/register.component';\r\nimport { ForgotComponent } from './components/auth/forgot/forgot.component';\r\nimport { VerifyComponent } from './components/auth/verify/verify.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AuthService } from './services/firebase/auth.service';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { ReviewService } from './services/review/review.service';\r\nimport { ReviewDetailsComponent } from './components/review-details/review-details.component';\r\nimport { ReviewsComponent } from './components/reviews/reviews.component';\r\nimport { FilmsComponent } from './components/films/films.component';\r\nimport { ReviewsByFilmComponent } from './components/reviews-by-film/reviews-by-film.component';\r\nimport { CreateReviewComponent } from './components/create-review/create-review.component';\r\n\r\nimport { RatingModule } from 'ngx-bootstrap/rating';\r\nimport { AddFilmComponent } from './components/add-film/add-film.component';\r\nimport { MyReviewsComponent } from './components/my-reviews/my-reviews.component';\r\nimport { EditReviewComponent } from './components/edit-review/edit-review.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ForgotComponent,\r\n    VerifyComponent,\r\n    HomeComponent,\r\n    NavbarComponent,\r\n    ReviewDetailsComponent,\r\n    ReviewsComponent,\r\n    FilmsComponent,\r\n    ReviewsByFilmComponent,\r\n    CreateReviewComponent,\r\n    AddFilmComponent,\r\n    MyReviewsComponent,\r\n    EditReviewComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireAuthModule,\r\n    AngularFirestoreModule,\r\n    BrowserAnimationsModule,\r\n    FontAwesomeModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BsDropdownModule.forRoot(),\r\n    RatingModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n    HttpClientModule,\r\n  ],\r\n  providers: [AuthService, ReviewService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Review } from 'src/app/models/review';\nimport { ReviewService } from 'src/app/services/review/review.service';\n\n@Component({\n  selector: 'app-review-details',\n  templateUrl: './review-details.component.html',\n  styleUrls: ['./review-details.component.scss']\n})\nexport class ReviewDetailsComponent implements OnInit {\n\n  review: Review;\n\n  constructor(\n    private reviewService: ReviewService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.getReviewById();\n    this.reloadComponent();\n  }\n\n  getReviewById() {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.reviewService.getReviewById(id).subscribe(\n      data => {\n        this.review = data;\n      }\n    );\n  }\n\n  reloadComponent() {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this.router.onSameUrlNavigation = 'reload';\n  }\n}\n","<body>\r\n  <div class=\"container text-center\" *ngIf=\"!review\">\r\n    <div class=\"spinner-border\" role=\"status\">\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container\" *ngIf=\"review\">\r\n    <div class=\"row\">\r\n      <div class=\"container-xl\">\r\n        <h1>{{ review.film.title }}</h1>\r\n        <p class=\"lead\">by {{ review.userReviewedId }} | {{ review.dateReviewed }}</p>\r\n        <hr>\r\n\r\n        <h5><strong>Review</strong></h5>\r\n        <h6>\r\n          <rating [(ngModel)]=\"review.rating\" max=10 readonly=\"true\"></rating> ({{review.rating}})\r\n        </h6>\r\n        <p>{{ review.review }}</p>\r\n        <hr>\r\n        <h5><strong>Film Details</strong></h5>\r\n        <p><strong>Synopsis: </strong>{{ review.film.synopsis}}</p>\r\n        <p><strong>Genre: </strong>{{ review.film.genre}}</p>\r\n        <p><strong>Director: </strong>{{ review.film.director}}</p>\r\n        <p><strong>Top Billed Actor: </strong>{{ review.film.topBilling}}</p>\r\n        <p><strong>Producing Studio: </strong>{{ review.film.studio}}</p>\r\n        <hr>\r\n\r\n        <h5><strong>Read Other Reviews on {{review.film.title}}</strong></h5>\r\n        <div *ngFor=\"let filmReview of review.film.reviews\">\r\n          <li *ngIf=\"filmReview.id != review.id\">\r\n            <a routerLink=\"/review/{{filmReview.id}}\">Score: {{ filmReview.rating }} / 10 by\r\n              {{ filmReview.userReviewedId }}</a>\r\n          </li>\r\n        </div>\r\n\r\n        <br />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/firebase/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- display navbar for all routes -->\r\n<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-info\">\r\n  <a class=\"navbar-brand\" routerLink=\"/home\">Bon Films!</a>\r\n\r\n  <div class=\"collapse navbar-collapse\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/reviews\">All Reviews</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/films\">All Films that are Reviewed</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"authService.userData\">\r\n        <a class=\"nav-link\" routerLink=\"/create-review\">Create a New Review</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <!-- show dropdown if user logged in -->\r\n    <div class=\"btn-group\" dropdown *ngIf=\"authService.userData as user\">\r\n      <button id=\"button-basic\" dropdownToggle type=\"button\" class=\"btn btn-info dropdown-toggle\"\r\n        aria-controls=\"dropdown-basic\">\r\n        {{(user.displayName) ? user.displayName : 'User'}} <span class=\"caret\"></span>\r\n      </button>\r\n      <ul id=\"dropdown-alignment\" *dropdownMenu class=\"dropdown-menu dropdown-menu-right\" role=\"menu\"\r\n        aria-labelledby=\"button-basic\">\r\n        <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/my-reviews\">My Reviews</a></li>\r\n        <li class=\"divider dropdown-divider\"></li>\r\n        <li role=\"menuitem\"><a class=\"dropdown-item\" href=\"#\" (click)=\"authService.SignOut()\">Logout</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- show login button is no user logged in -->\r\n    <button type=\"button\" class=\"btn btn-info\" *ngIf=\"!authService.userData\" routerLink=\"/login\">\r\n      Login\r\n    </button>\r\n  </div>\r\n</nav>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Observable } from 'rxjs';\nimport { Film } from 'src/app/models/film';\nimport { Review } from 'src/app/models/review';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilmService {\n  private baseUrl = environment.baseUrl;\n\n  constructor(\n    private http: HttpClient,\n    private auth: AngularFireAuth,\n  ) { }\n\n  getAllFilms(): Observable<Film[]> {\n    return this.http.get<Film[]>(this.baseUrl + `/films`);\n  }\n\n  getReviewsByFilm(id: string): Observable<Review[]> {\n    return this.http.get<Review[]>(this.baseUrl + `/film/${id}/reviews`);\n  }\n\n  createFilm(title: string, genre: string, studio: string, director: string, topBilling: string, synopsis: string): Observable<Film> {\n    let body: Film = {\n      id: null,\n      title: title,\n      genre: genre,\n      studio: studio,\n      director: director,\n      topBilling: topBilling,\n      synopsis: synopsis,\n      reviews: null,\n    }\n\n    return new Observable<Film>(observer => {\n      this.auth.user.subscribe(user => {\n        user && user.getIdToken().then(token => {\n          this.http.post<Film>(\n            this.baseUrl + `/film/create`,\n            body,\n            httpOptionsWithAuthToken(token),\n          ).subscribe(() => observer.next());\n        })\n      })\n    })\n  }\n\n}\n\nconst httpsOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  }),\n};\n\nconst httpOptionsWithAuthToken = token => ({\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'AuthToken': token,\n  }),\n});\n\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { Router } from '@angular/router';\r\nimport { auth } from 'firebase';\r\nimport { FirebaseUser } from '../../models/firebase-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  userData: firebase.User;\r\n\r\n  constructor(\r\n    public afs: AngularFirestore,\r\n    public afAuth: AngularFireAuth,\r\n    public router: Router,\r\n    public ngZone: NgZone\r\n  ) {\r\n    this.afAuth.authState.subscribe(user => {\r\n      //save userData in localStorage if logged in\r\n      //else save 'null' in localStorage if logged out\r\n      if (user) {\r\n        this.userData = user;\r\n        localStorage.setItem('user', JSON.stringify(this.userData));\r\n        JSON.parse(localStorage.getItem('user'));\r\n      } else {\r\n        localStorage.setItem('user', null);\r\n        JSON.parse(localStorage.getItem('user'));\r\n      }\r\n    })\r\n  }\r\n\r\n  async SignIn(email, password) {\r\n    try {\r\n      const result = await this.afAuth.signInWithEmailAndPassword(email, password);\r\n      this.ngZone.run(() => {\r\n        //this.SetUserData(result.user);\r\n        this.reloadComponent(\"/home\");\r\n      });\r\n    } catch (error) {\r\n      window.alert(error.message);\r\n    }\r\n  }\r\n\r\n  async SignUp(email, password) {\r\n    try {\r\n      const result = await this.afAuth.createUserWithEmailAndPassword(email, password);\r\n      this.SendVerificationMail();\r\n      //this.SetUserData(result.user);\r\n    } catch (error) {\r\n      window.alert(error.message);\r\n    }\r\n  }\r\n\r\n  async SendVerificationMail() {\r\n    return (await this.afAuth.currentUser).sendEmailVerification()\r\n      .then(() => {\r\n        this.router.navigate(['verify-email']);\r\n      })\r\n  }\r\n\r\n  async ForgotPassword(passwordResetEmail) {\r\n    try {\r\n      await this.afAuth.sendPasswordResetEmail(passwordResetEmail);\r\n      window.alert('Password reset email sent, please check your inbox.');\r\n      this.router.navigate(['login']);\r\n    } catch (error) {\r\n      window.alert(error);\r\n    }\r\n  }\r\n\r\n  //sign in with Google\r\n  GoogleAuth() {\r\n    return this.AuthLogin(new auth.GoogleAuthProvider());\r\n  }\r\n\r\n  async AuthLogin(provider) {\r\n    try {\r\n      const result = await this.afAuth.signInWithPopup(provider);\r\n      this.ngZone.run(() => {\r\n        this.router.navigate(['home']);\r\n      });\r\n      //this.SetUserData(result.user);\r\n    } catch (error) {\r\n      window.alert(error);\r\n    }\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return (user !== null && user.emailVerified !== false) ? true : false;\r\n  }\r\n\r\n  async getToken() {\r\n    return (await this.afAuth.currentUser).getIdToken().then(\r\n      (token) => token.toString()\r\n    );\r\n  }\r\n\r\n  async SignOut() {\r\n    await this.afAuth.signOut();\r\n    localStorage.removeItem('user');\r\n    this.router.navigate(['home']);\r\n  }\r\n\r\n  //save userData as an object in AngularFireStore\r\n  // SetUserData(user) {\r\n  //   const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\r\n  //   const userData: FirebaseUser = {\r\n  //     uid: user.uid,\r\n  //     email: user.email,\r\n  //     displayName: user.displayName,\r\n  //     photoURL: user.photoURL,\r\n  //     emailVerified: user.emailVerified\r\n  //   }\r\n  //   return userRef.set(userData, {\r\n  //     merge: true\r\n  //   })\r\n  // }\r\n\r\n  reloadComponent(newUrl: string) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    this.router.onSameUrlNavigation = 'reload';\r\n    this.router.navigateByUrl(newUrl);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FilmReview } from 'src/app/models/film-review';\nimport { ReviewService } from 'src/app/services/review/review.service';\n\n@Component({\n  selector: 'app-reviews',\n  templateUrl: './reviews.component.html',\n  styleUrls: ['./reviews.component.scss']\n})\nexport class ReviewsComponent implements OnInit {\n\n  filmReviews: FilmReview[];\n\n  constructor(\n    private reviewService: ReviewService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getAllReviews();\n  }\n\n  getAllReviews() {\n    this.reviewService.getAllReviews().subscribe(\n      data => {\n        this.filmReviews = data;\n      }\n    );\n  }\n}\n","<main role=\"main\">\r\n  <div class=\"container text-center\" *ngIf=\"!filmReviews\">\r\n    <div class=\"spinner-border\" role=\"status\">\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container\" *ngIf=\"filmReviews\">\r\n    <div class=\"py-5 text-center\">\r\n      <h2><u>All Reviews</u></h2>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\" *ngFor=\"let filmReview of filmReviews\">\r\n        <h2>{{ filmReview.title }}</h2>\r\n        <h5>\r\n          <rating [(ngModel)]=\"filmReview.rating\" max=10 readonly=\"true\"></rating> ({{filmReview.rating}})\r\n        </h5>\r\n        <h6> {{ filmReview.review }} </h6>\r\n        <p>Reviewed by: {{ filmReview.userReviewedId }} | {{filmReview.dateReviewed}}</p>\r\n        <p><a class=\"btn btn-secondary\" routerLink=\"/review/{{filmReview.id}}\" role=\"button\">Review details &raquo;</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</main>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/services/firebase/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot',\r\n  templateUrl: './forgot.component.html',\r\n  styleUrls: ['./forgot.component.scss']\r\n})\r\nexport class ForgotComponent implements OnInit {\r\n\r\n  forgotForm: FormGroup;\r\n\r\n  onSubmit(): void {\r\n    this.authService.ForgotPassword(this.forgotForm.get('email').value);\r\n  }\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.forgotForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n    });\r\n  }\r\n\r\n  get email() {\r\n    return this.forgotForm.get(\"email\");\r\n  }\r\n\r\n}\r\n","<body class=\"text-center\">\r\n  <form class=\"form-forgot\" [formGroup]=\"forgotForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h1 class=\"h3 mb-3 font-weight-normal\">Password Reset</h1>\r\n    <p>Please enter your email address to request a password reset.</p>\r\n\r\n    <div class=\"form-group\">\r\n      <div class=\"invalid-feedback d-block\" *ngIf=\"email.invalid && email.touched\">\r\n        The email is invalid.\r\n      </div>\r\n      <input formControlName=\"email\" type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\">\r\n    </div>\r\n\r\n    <button [disabled]=\"forgotForm.invalid\" class=\"btn btn-lg btn-info btn-block\" type=\"submit\">Reset Password</button>\r\n\r\n    <hr class=\"dashed\">\r\n\r\n    <div style=\"float: right; cursor: pointer;\">\r\n      <span class=\"text-secondary\" routerLink=\"/login\">Return to Login</span>\r\n    </div>\r\n\r\n  </form>\r\n</body>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ForgotComponent } from './components/auth/forgot/forgot.component';\r\nimport { LoginComponent } from './components/auth/login/login.component';\r\nimport { RegisterComponent } from './components/auth/register/register.component';\r\nimport { VerifyComponent } from './components/auth/verify/verify.component';\r\nimport { CreateReviewComponent } from './components/create-review/create-review.component';\r\nimport { FilmsComponent } from './components/films/films.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { MyReviewsComponent } from './components/my-reviews/my-reviews.component';\r\nimport { ReviewDetailsComponent } from './components/review-details/review-details.component';\r\nimport { ReviewsByFilmComponent } from './components/reviews-by-film/reviews-by-film.component';\r\nimport { ReviewsComponent } from './components/reviews/reviews.component';\r\n\r\nimport { AuthGuard } from './services/guard/auth.guard';\r\nimport { SecureInnerPagesGuard } from './services/guard/secure-inner-pages.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent, /* canActivate: [AuthGuard] */ },\r\n  { path: 'reviews', component: ReviewsComponent, },\r\n  { path: 'review/:id', component: ReviewDetailsComponent, },\r\n  { path: 'films', component: FilmsComponent },\r\n  { path: 'film/:id/reviews', component: ReviewsByFilmComponent },\r\n  { path: 'create-review', component: CreateReviewComponent },\r\n  { path: 'my-reviews', component: MyReviewsComponent },\r\n  { path: 'login', component: LoginComponent, /* canActivate: [SecureInnerPagesGuard] */ },\r\n  { path: 'register', component: RegisterComponent, /* canActivate: [SecureInnerPagesGuard] */ },\r\n  { path: 'forgot-password', component: ForgotComponent, /* canActivate: [SecureInnerPagesGuard] */ },\r\n  { path: 'verify-email', component: VerifyComponent, /* canActivate: [SecureInnerPagesGuard] */ },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Review } from 'src/app/models/review';\nimport { FilmService } from 'src/app/services/film/film.service';\n\n@Component({\n  selector: 'app-reviews-by-film',\n  templateUrl: './reviews-by-film.component.html',\n  styleUrls: ['./reviews-by-film.component.scss']\n})\nexport class ReviewsByFilmComponent implements OnInit {\n\n  filmReviews: Review[];\n\n  constructor(\n    private filmService: FilmService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.getAllReviewsByFilm();\n  }\n\n  getAllReviewsByFilm() {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.filmService.getReviewsByFilm(id).subscribe(\n      data => {\n        this.filmReviews = data;\n      }\n    );\n  }\n\n}\n","<main role=\"main\">\r\n  <div class=\"container text-center\" *ngIf=\"!filmReviews\">\r\n    <div class=\"spinner-border\" role=\"status\">\r\n      <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container\" *ngIf=\"filmReviews\">\r\n    <div class=\"py-5 text-center\">\r\n      <h2><u>All Reviews for {{filmReviews[0].film.title}}</u></h2>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\" *ngFor=\"let filmReview of filmReviews\">\r\n        <h5>\r\n          <rating [(ngModel)]=\"filmReview.rating\" max=10 readonly=\"true\"></rating> ({{filmReview.rating}})\r\n        </h5>\r\n        <h6> {{ filmReview.review }} </h6>\r\n        <p>Reviewed by: {{ filmReview.userReviewedId }} | {{filmReview.dateReviewed}}</p>\r\n        <p><a class=\"btn btn-secondary\" routerLink=\"/review/{{filmReview.id}}\" role=\"button\">Review details &raquo;</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</main>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}